{"version":3,"sources":["common.js","actions/todoActions.js","actions/authActions.js","actions/index.js","components/TodoForm.js","components/TodoItem.js","components/TodoList.js","components/TodoApp.js","components/auth/SignupPage.js","components/auth/LoginPage.js","components/auth/ConfirmPage.js","components/auth/LogoutPage.js","components/AppNavbar.js","reducers/todoReducer.js","reducers/authReducer.js","reducers/index.js","App.js","serviceWorker.js","index.js"],"names":["ActionTypes","LocalStorageKeys","fieldSorter","fields","a","b","map","o","dir","substring","reduce","p","n","logJsonStringify","label","value","now","Date","toLocaleDateString","toLocaleTimeString","saveTodoUrl","process","getTodosUrl","getTodos","auth","dispatch","username","jwtToken","data","headers","Authorization","options","axios","post","result","todoItems","sort","payload","relativeTimes","getRelativeTimes","type","console","error","Promise","reject","description","when","moment","add","fromNow","toISOString","endOf","saveTodo","todoItem","userPool","AmazonCognitoIdentity","UserPoolId","ClientId","allActions","todoActions","authActions","signupUser","formData","user","name","email","phone_number","password","attrList","push","Name","Value","signUp","err","signupFailed","authToken","undefined","cognitoUser","signedup","loginUser","authenticationData","Username","Password","authenticationDetails","userData","Pool","authenticateUser","onSuccess","localStorage","setItem","JSON","stringify","actionPayload","authenticated","onFailure","loginFailed","confirmUser","confirmRegistration","code","confirmed","confirmFailed","logoutUser","removeItem","TodoForm","useForm","register","handleSubmit","reset","useDispatch","onSubmit","todoId","uuidv4","createdDate","todoState","dueDate","InputGroup","className","FormControl","placeholder","ref","required","Form","Control","as","defaultValue","item","key","Append","Button","variant","TodoItem","nowISO","id","checked","data-keeper-edited","onChange","e","htmlFor","Badge","style","color","margin","padding","onClick","TodoList","useEffect","fetchData","ListGroup","Item","TodoApp","useSelector","state","todoReducer","todos","authReducer","to","SignupPage","Alert","message","LoginPage","autoComplete","ConfirmPage","LogoutPage","href","AppNavbar","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","Nav","pathname","Text","initialState","action","getItem","parsedToken","parse","getInitialState","rootReducer","combineReducers","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","App","Container","path","component","exact","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.7296d922.chunk.js","sourcesContent":["const loggingEnabled = false;\n\n// Enums\n//-------------------------------------------------------------\nexport const ActionTypes = {\n  SIGNUP_USER: \"SIGNUP_USER\",\n  SIGNUP_USER_FAILED: \"SIGNUP_USER_FAILED\",\n  LOGIN_USER: \"LOGIN_USER\",\n  LOGIN_USER_FAILED: \"LOGIN_USER_FAILED\",\n  COFIRM_USER: \"COFIRM_USER\",\n  COFIRM_USER_FAILED: \"COFIRM_USER_FAILED\",\n  LOGOUT_USER: \"LOGOUT_USER\",\n};\n\n// Constants\n//-------------------------------------------------------------\nexport const LocalStorageKeys = {\n  MYTODOS_AUTH_USER: \"mytodos-auth-user\",\n};\n\n// Functions\n//-------------------------------------------------------------\nexport const fieldSorter = (fields) => (a, b) =>\n  fields\n    .map((o) => {\n      let dir = 1;\n      if (o[0] === \"-\") {\n        dir = -1;\n        o = o.substring(1);\n      }\n      return a[o] > b[o] ? dir : a[o] < b[o] ? -dir : 0;\n    })\n    .reduce((p, n) => (p ? p : n), 0);\n\nexport const logJsonStringify = (label, value) => {\n  const now = new Date();\n  const log = {\n    timestamp: `${now.toLocaleDateString()} ${now.toLocaleTimeString()}`,\n    label: label,\n    value: value,\n  };\n\n  if (loggingEnabled) {\n    console.log(JSON.stringify(log, null, 2));\n  }\n};\n","import axios from \"axios\";\nimport moment from \"moment\";\nimport { fieldSorter, logJsonStringify } from \"../common\";\nconst apiEndpoint = process.env.REACT_APP_API_ENDPOINT;\nconst saveTodoUrl = `${apiEndpoint}/savetodos`;\nconst getTodosUrl = `${apiEndpoint}/gettodos`;\n\nconst getTodos = (auth) => {\n  return async (dispatch) => {\n    try {\n      logJsonStringify(\"todoActions:getTodos:username\", auth.username);\n      logJsonStringify(\"todoActions:getTodos:jwtToken\", auth.jwtToken);\n      const data = {\n        username: auth.username,\n      };\n      const headers = {\n        Authorization: auth.jwtToken,\n      };\n      const options = {};\n      options[\"headers\"] = headers;\n      const result = await axios.post(getTodosUrl, data, options);\n      const todoItems = result.data.sort(fieldSorter([\"-todoState\", \"dueDate\"]));\n      const payload = {\n        todoItems,\n        relativeTimes: getRelativeTimes(),\n      };\n      return dispatch({\n        type: \"GET_TODOS\",\n        payload,\n      });\n    } catch (error) {\n      console.error(error);\n      return Promise.reject(\"There was an error getting the todos from the API.\");\n    }\n  };\n};\n\nconst saveTodo = (todoItem, auth) => {\n  return async (dispatch) => {\n    try {\n      const headers = {\n        Authorization: auth.jwtToken,\n      };\n      const options = {};\n      options[\"headers\"] = headers;\n      await axios.post(saveTodoUrl, todoItem, options);\n      return dispatch(getTodos(todoItem.username));\n    } catch (error) {\n      console.error(error);\n      return Promise.reject(\"There was an error saving the todo to the API.\");\n    }\n  };\n};\n\nconst getRelativeTimes = () => {\n  const relativeTimes = [\n    {\n      description: \"Now (ish)...\",\n      when: moment().add(1, \"hours\").fromNow(),\n      value: moment().add(1, \"hours\").toISOString(),\n    },\n    {\n      description: \"Today...\",\n      when: moment().endOf(\"day\").fromNow(),\n      value: moment().endOf(\"day\").toISOString(),\n    },\n    {\n      description: \"Tomorrow...\",\n      when: moment().add(1, \"days\").fromNow(),\n      value: moment().add(1, \"days\").toISOString(),\n    },\n    {\n      description: \"This week...\",\n      when: moment().add(3, \"days\").fromNow(),\n      value: moment().add(3, \"days\").toISOString(),\n    },\n    {\n      description: \"Next week...\",\n      when: moment().add(7, \"days\").fromNow(),\n      value: moment().add(7, \"days\").toISOString(),\n    },\n  ];\n  return relativeTimes;\n};\n\nexport default {\n  getTodos,\n  saveTodo,\n};\n","import { ActionTypes, LocalStorageKeys, logJsonStringify } from \"../common\";\nimport * as AmazonCognitoIdentity from \"amazon-cognito-identity-js\";\n\nconst poolData = {\n  UserPoolId: process.env.REACT_APP_COGNITO_USERPOOLID,\n  ClientId: process.env.REACT_APP_COGNITO_CLIENTID,\n};\n\nconst userPool = new AmazonCognitoIdentity.CognitoUserPool(poolData);\n\nclass AuthService {\n  signupUser(params) {}\n  loginUser(formData) {}\n  logoutUser() {}\n  confirmUser() {}\n}\n\nconst signupUser = (formData) => {\n  return async (dispatch) => {\n    const user = {\n      name: formData.name,\n      username: formData.email,\n      email: formData.email,\n      phone_number: formData.phone_number,\n      password: formData.password,\n    };\n    logJsonStringify(\"authActions:signupUser:user:\", user);\n    const attrList = [];\n    attrList.push({\n      Name: \"phone_number\",\n      Value: user.phone_number,\n    });\n    attrList.push({\n      Name: \"email\",\n      Value: user.email,\n    });\n    attrList.push({\n      Name: \"name\",\n      Value: user.name,\n    });\n    userPool.signUp(user.email, user.password, attrList, null, function (err, result) {\n      if (err) {\n        logJsonStringify(\"authActions:signupUser:err:\", err);\n        const actionPayload = {\n          signupFailed: true,\n          error: err,\n          authToken: undefined,\n        };\n        return dispatch({\n          type: ActionTypes.SIGNUP_USER_FAILED,\n          payload: actionPayload,\n        });\n      } else {\n        logJsonStringify(\"authActions:signupUser:result:\", result);\n        const cognitoUser = result.user;\n        const actionPayload = {\n          signedup: true,\n          authToken: cognitoUser,\n        };\n        return dispatch({\n          type: ActionTypes.SIGNUP_USER,\n          payload: actionPayload,\n        });\n      }\n    });\n  };\n};\n\nconst loginUser = (formData) => {\n  return async (dispatch) => {\n    const authenticationData = {\n      Username: formData.username,\n      Password: formData.password,\n    };\n    const authenticationDetails = new AmazonCognitoIdentity.AuthenticationDetails(\n      authenticationData\n    );\n    const userData = {\n      Username: formData.username,\n      Pool: userPool,\n    };\n    const cognitoUser = new AmazonCognitoIdentity.CognitoUser(userData);\n    cognitoUser.authenticateUser(authenticationDetails, {\n      onSuccess: function (result) {\n        logJsonStringify(\"authActions:loginUser:result:\", result);\n        localStorage.setItem(LocalStorageKeys.MYTODOS_AUTH_USER, JSON.stringify(result));\n        const actionPayload = {\n          authenticated: true,\n          authToken: result,\n          name: result[\"idToken\"][\"payload\"][\"name\"],\n          username: result[\"idToken\"][\"payload\"][\"cognito:username\"],\n          jwtToken: result[\"idToken\"][\"jwtToken\"],\n        };\n        return dispatch({\n          type: ActionTypes.LOGIN_USER,\n          payload: actionPayload,\n        });\n      },\n      onFailure: function (err) {\n        logJsonStringify(\"authActions:loginUser:err:\", err);\n        const actionPayload = {\n          authenticated: false,\n          loginFailed: true,\n          error: err,\n          authToken: undefined,\n        };\n        logJsonStringify(\"authActions:loginUser:err:\", actionPayload);\n        return dispatch({\n          type: ActionTypes.LOGIN_USER_FAILED,\n          payload: actionPayload,\n        });\n      },\n    });\n  };\n};\n\nconst confirmUser = (formData) => {\n  return async (dispatch) => {\n    const userData = {\n      Username: formData.username,\n      Pool: userPool,\n    };\n    const cognitoUser = new AmazonCognitoIdentity.CognitoUser(userData);\n    cognitoUser.confirmRegistration(formData.code, true, function (err, result) {\n      if (err) {\n        logJsonStringify(\"authActions:confirmUser:err:\", err);\n        const actionPayload = {\n          confirmed: false,\n          confirmFailed: true,\n          error: err,\n        };\n        return dispatch({\n          type: ActionTypes.COFIRM_USER_FAILED,\n          payload: actionPayload,\n        });\n      } else {\n        logJsonStringify(\"authActions:confirmUser:result:\", result);\n        const actionPayload = {\n          confirmed: true,\n          error: null,\n        };\n        return dispatch({\n          type: ActionTypes.COFIRM_USER,\n          payload: actionPayload,\n        });\n      }\n    });\n  };\n};\n\nconst logoutUser = () => {\n  return (dispatch) => {\n    logJsonStringify(\"authActions:logoutUser\", null);\n    localStorage.removeItem(LocalStorageKeys.MYTODOS_AUTH_USER);\n    const actionPayload = {\n      authenticated: false,\n      loginFailed: false,\n      confirmed: false,\n      confirmFailed: false,\n      signedup: false,\n      signupFailed: false,\n      error: undefined,\n      authToken: undefined,\n      name: undefined,\n    };\n    return dispatch({\n      type: ActionTypes.LOGOUT_USER,\n      payload: actionPayload,\n    });\n  };\n};\n\nexport default {\n  signupUser,\n  loginUser,\n  confirmUser,\n  logoutUser,\n};\n","import todoActions from \"./todoActions\";\nimport authActions from \"./authActions\";\n\nconst allActions = {\n  todoActions,\n  authActions,\n};\n\nexport default allActions;\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Form, Button, InputGroup, FormControl } from \"react-bootstrap\";\nimport { useForm } from \"react-hook-form\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport allActions from \"../actions\";\n\n/**\n * TodoForm\n * @description Form for adding new Todo items.\n */\nexport default function TodoForm({ relativeTimes, auth }) {\n  const { register, handleSubmit, reset } = useForm();\n  const dispatch = useDispatch();\n  const onSubmit = async (formData) => {\n    const todoItem = {\n      username: auth.username,\n      todoId: uuidv4(),\n      createdDate: new Date().toISOString(),\n      description: formData.description,\n      todoState: \"pending\",\n      dueDate: formData.dueDate,\n    };\n    dispatch(allActions.todoActions.saveTodo(todoItem, auth));\n    reset();\n  };\n  return (\n    <div>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <InputGroup className=\"mb-3\">\n          <FormControl\n            placeholder=\"What do you need to do?\"\n            ref={register}\n            name=\"description\"\n            required\n          />\n        </InputGroup>\n        <InputGroup className=\"mb-3\">\n          <Form.Control name=\"dueDate\" as=\"select\" defaultValue=\"\" ref={register} required>\n            <option value=\"\">When does it need to be done?</option>\n            {relativeTimes.map((item) => (\n              <option key={item.value} value={item.value}>\n                {item.description} {item.when}\n              </option>\n            ))}\n          </Form.Control>\n          <InputGroup.Append>\n            <Button type=\"submit\" variant=\"info\">\n              do it &nbsp; :)\n            </Button>\n          </InputGroup.Append>\n        </InputGroup>\n      </form>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Button, Badge } from \"react-bootstrap\";\nimport moment from \"moment\";\nimport allActions from \"../actions\";\n\n/**\n * TodoItem\n * @description This class is the todo item in the list.\n */\nexport default function TodoItem({ item }) {\n  const dispatch = useDispatch();\n  const nowISO = new Date().toISOString();\n  return (\n    <>\n      <div>\n        <div className=\"form-check\">\n          <input\n            type=\"checkbox\"\n            id={item.todoId}\n            className=\"form-check-input\"\n            checked={item.todoState === \"done\"}\n            data-keeper-edited=\"yes\"\n            onChange={(e) => {\n              if (item.todoState === \"pending\") {\n                item.todoState = \"done\";\n              } else {\n                item.todoState = \"pending\";\n              }\n              dispatch(allActions.todoActions.saveTodo(item));\n            }}\n          />\n          <label htmlFor={item.todoId} className={item.todoState === \"done\" ? \"line-through\" : \"\"}>\n            {nowISO > item.dueDate && item.todoState !== \"done\" && (\n              <span>\n                <Badge variant=\"danger\">git-er-done</Badge>\n                &nbsp;&nbsp;\n              </span>\n            )}\n            {item.description}\n          </label>\n        </div>\n        <div className={item.todoState === \"done\" ? \"line-through\" : \"\"}>\n          <span style={{ color: \"lightblue\" }}>Created</span> {moment(item.createdDate).fromNow()}\n          {\", \"}\n          <span style={{ color: \"lightblue\" }}>due</span> {moment(item.dueDate).fromNow()}.\n        </div>\n      </div>\n      <div>\n        <Button\n          style={{ margin: \"0px\", padding: \"0px\" }}\n          variant=\"link\"\n          onClick={(e) => {\n            item.todoState = \"archived\";\n            dispatch(allActions.todoActions.saveTodo(item));\n          }}\n        >\n          archive\n        </Button>\n      </div>\n    </>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { ListGroup } from \"react-bootstrap\";\nimport allActions from \"../actions\";\nimport TodoItem from \"./TodoItem\";\n\n/**\n * TodoList\n * @description This class is the list component of the TodoList application.\n */\nexport default function TodoList({ todoItems, auth }) {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const fetchData = async () => {\n      dispatch(allActions.todoActions.getTodos(auth));\n    };\n    fetchData();\n  }, [dispatch, auth]);\n  return (\n    <ListGroup variant=\"flush\">\n      {todoItems.map((item) => (\n        <ListGroup.Item key={item.todoId}>\n          <TodoItem item={item} />\n        </ListGroup.Item>\n      ))}\n    </ListGroup>\n  );\n}\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport TodoForm from \"./TodoForm\";\nimport TodoList from \"./TodoList\";\nimport { Redirect } from \"react-router-dom\";\n\n/**\n * TodoApp\n */\nfunction TodoApp() {\n  const relativeTimes = useSelector((state) => state.todoReducer.relativeTimes);\n  const todoItems = useSelector((state) => state.todoReducer.todos);\n  const auth = useSelector((state) => state.authReducer.auth);\n  if (auth.authenticated) {\n    return (\n      <>\n        <h1>todo</h1>\n        <TodoForm auth={auth} relativeTimes={relativeTimes} />\n        <TodoList auth={auth} todoItems={todoItems} />\n      </>\n    );\n  } else {\n    return <Redirect to=\"/auth/login\" />;\n  }\n}\n\nexport default TodoApp;\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Form, Button, InputGroup, FormControl, Alert } from \"react-bootstrap\";\nimport { useForm } from \"react-hook-form\";\nimport allActions from \"../../actions\";\nimport { Redirect } from \"react-router-dom\";\n\n/**\n * TodoForm\n * @description Form for adding new Todo items.\n */\nexport default function SignupPage() {\n  const auth = useSelector((state) => state.authReducer.auth);\n  const { register, handleSubmit } = useForm();\n  const dispatch = useDispatch();\n  const onSubmit = async (formData) => {\n    dispatch(allActions.authActions.signupUser(formData));\n  };\n  if (auth.authenticated) {\n    return <Redirect to=\"/\" />;\n  }\n  if (auth.signedup && !auth.confirmed) {\n    return <Redirect to=\"/auth/confirm\" />;\n  }\n  return (\n    <div>\n      <h1>signup</h1>\n      {auth.signupFailed && auth.error && <Alert variant=\"warning\">{auth.error.message}</Alert>}\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <InputGroup className=\"mb-3\">\n          <FormControl name=\"name\" placeholder=\"name\" ref={register} required />\n        </InputGroup>\n        <InputGroup className=\"mb-3\">\n          <FormControl name=\"email\" placeholder=\"email\" ref={register} required />\n        </InputGroup>\n        <InputGroup className=\"mb-3\">\n          <FormControl name=\"phone_number\" placeholder=\"phone\" ref={register} required />\n        </InputGroup>\n        <InputGroup className=\"mb-3\">\n          <Form.Control name=\"password\" placeholder=\"password\" ref={register} required />\n        </InputGroup>\n        <InputGroup>\n          <Button type=\"submit\" variant=\"info\">\n            Submit\n          </Button>\n        </InputGroup>\n      </form>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Form, Button, InputGroup, FormControl, Alert } from \"react-bootstrap\";\nimport { useForm } from \"react-hook-form\";\nimport allActions from \"../../actions\";\nimport { Redirect } from \"react-router-dom\";\n\n/**\n * TodoForm\n * @description Form for adding new Todo items.\n */\nexport default function LoginPage() {\n  const { register, handleSubmit } = useForm();\n  const auth = useSelector((state) => state.authReducer.auth);\n  const dispatch = useDispatch();\n  const onSubmit = async (formData) => {\n    dispatch(allActions.authActions.loginUser(formData));\n  };\n  if (auth.authenticated) {\n    return <Redirect to=\"/\" />;\n  }\n  return (\n    <div>\n      <h1>login</h1>\n      {auth.loginFailed && auth.error && <Alert variant=\"warning\">{auth.error.message}</Alert>}\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <InputGroup className=\"mb-3\">\n          <FormControl\n            autoComplete=\"username\"\n            name=\"username\"\n            placeholder=\"username\"\n            ref={register}\n            required\n          />\n        </InputGroup>\n        <InputGroup className=\"mb-3\">\n          <Form.Control\n            name=\"password\"\n            placeholder=\"password\"\n            ref={register}\n            required\n            type=\"password\"\n            autoComplete=\"current-password\"\n          />\n        </InputGroup>\n        <InputGroup>\n          <Button type=\"submit\" variant=\"info\">\n            Submit\n          </Button>\n        </InputGroup>\n      </form>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Form, Button, InputGroup, FormControl, Alert } from \"react-bootstrap\";\nimport { useForm } from \"react-hook-form\";\nimport allActions from \"../../actions\";\nimport { Redirect } from \"react-router-dom\";\n\n/**\n * TodoForm\n * @description Form for adding new Todo items.\n */\nexport default function ConfirmPage() {\n  const auth = useSelector((state) => state.authReducer.auth);\n  const { register, handleSubmit } = useForm();\n  const dispatch = useDispatch();\n  const onSubmit = async (formData) => {\n    dispatch(allActions.authActions.confirmUser(formData));\n  };\n  if (auth.authenticated) {\n    return <Redirect to=\"/\" />;\n  }\n  if (auth.confirmed) {\n    return <Redirect to=\"/auth/login\" />;\n  }\n  return (\n    <div>\n      <h1>confirm</h1>\n      {auth.confirmFailed && auth.error && <Alert variant=\"warning\">{auth.error.message}</Alert>}\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <InputGroup className=\"mb-3\">\n          <FormControl name=\"username\" placeholder=\"username\" ref={register} required />\n        </InputGroup>\n        <InputGroup className=\"mb-3\">\n          <Form.Control name=\"code\" placeholder=\"confirmation code\" ref={register} required />\n        </InputGroup>\n        <InputGroup>\n          <Button type=\"submit\" variant=\"info\">\n            Submit\n          </Button>\n        </InputGroup>\n      </form>\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Alert } from \"react-bootstrap\";\nimport allActions from \"../../actions\";\n\n/**\n * LogoutPage\n * @description This page logs the user out of the application.\n */\nexport default function LogoutPage() {\n  const auth = useSelector((state) => state.authReducer.auth);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(allActions.authActions.logoutUser());\n  }, [dispatch]);\n\n  if (!auth.authenticated) {\n    return (\n      <>\n        <h1>logout</h1>\n        <Alert variant=\"info\">\n          You've been logged out. <a href=\"/auth/login\">Click here to log back in.</a>\n        </Alert>\n      </>\n    );\n  } else {\n    return (\n      <>\n        <div>Logging out...</div>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport { Navbar, Nav } from \"react-bootstrap\";\nimport { useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\n/**\n * Navbar()\n */\nexport function AppNavbar() {\n  const auth = useSelector((state) => state.authReducer.auth);\n  return (\n    <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\n      <Navbar.Brand href=\"/\">\n        todo<span style={{ color: \"lightgreen\" }}>...git-er-done</span>\n      </Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className=\"mr-auto\">\n          {!auth.authenticated && (\n            <>\n              <Link className=\"nav-link\" to={{ pathname: \"/auth/signup\" }}>\n                signup\n              </Link>\n              <Link className=\"nav-link\" to={{ pathname: \"/auth/login\" }}>\n                login\n              </Link>\n              <Link className=\"nav-link\" to={{ pathname: \"/auth/confirm\" }}>\n                confirm\n              </Link>\n            </>\n          )}\n          {auth.authenticated && (\n            <>\n              <Link className=\"nav-link\" to={{ pathname: \"/auth/logout\" }}>\n                logout\n              </Link>\n            </>\n          )}\n        </Nav>\n      </Navbar.Collapse>\n      <Navbar.Collapse className=\"justify-content-end\">\n        <Navbar.Text>\n          {auth?.name && (\n            <>\n              Signed in as: <a href=\"#login\">{auth?.name || \"guest\"}</a>\n            </>\n          )}\n        </Navbar.Text>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n}\n","const initialState = {\n  todos: [],\n  relativeTimes: [],\n  user: {\n    authenticated: true,\n  },\n};\nconst todoReducer = (state = initialState, action) => {\n  //   console.log(state, action);\n  switch (action.type) {\n    case \"GET_TODOS\":\n      return {\n        ...state,\n        todos: action.payload.todoItems,\n        relativeTimes: action.payload.relativeTimes,\n      };\n    case \"SAVE_TODO\":\n      return {\n        ...state,\n        todos: action.payload.todoItems,\n        relativeTimes: action.payload.relativeTimes,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default todoReducer;\n","import { ActionTypes, logJsonStringify, LocalStorageKeys } from \"../common\";\n\nconst getInitialState = () => {\n  const authToken = localStorage.getItem(LocalStorageKeys.MYTODOS_AUTH_USER);\n  logJsonStringify(\"authReducer:user\", authToken);\n  if (authToken) {\n    const parsedToken = JSON.parse(authToken);\n    return {\n      auth: {\n        authenticated: true,\n        confirmed: true,\n        signedup: true,\n        error: undefined,\n        authToken: parsedToken,\n        name: parsedToken[\"idToken\"][\"payload\"][\"name\"],\n        username: parsedToken[\"idToken\"][\"payload\"][\"cognito:username\"],\n        jwtToken: parsedToken[\"idToken\"][\"jwtToken\"],\n      },\n    };\n  } else {\n    return {\n      auth: {\n        authenticated: false,\n        loginFailed: false,\n        confirmed: false,\n        confirmFailed: false,\n        signedup: false,\n        signupFailed: false,\n        error: undefined,\n        user: undefined,\n        name: undefined,\n        username: undefined,\n      },\n    };\n  }\n};\n\nconst initialState = getInitialState();\n\nconst authReducer = (state = initialState, action) => {\n  logJsonStringify(\"authReducer:state\", state);\n  logJsonStringify(\"authReducer:action\", action.type);\n  switch (action.type) {\n    case ActionTypes.SIGNUP_USER:\n      return {\n        ...state,\n        auth: action.payload,\n      };\n\n    case ActionTypes.SIGNUP_USER_FAILED:\n      return {\n        ...state,\n        auth: action.payload,\n      };\n\n    case ActionTypes.LOGIN_USER:\n      return {\n        ...state,\n        auth: action.payload,\n      };\n\n    case ActionTypes.LOGIN_USER_FAILED:\n      return {\n        ...state,\n        auth: action.payload,\n      };\n\n    case ActionTypes.COFIRM_USER:\n      return {\n        ...state,\n        auth: action.payload,\n      };\n\n    case ActionTypes.COFIRM_USER_FAILED:\n      return {\n        ...state,\n        auth: action.payload,\n      };\n\n    case ActionTypes.LOGOUT_USER:\n      return {\n        ...state,\n        auth: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;\n","import todoReducer from \"./todoReducer\";\nimport authReducer from \"./authReducer\";\nimport { combineReducers } from \"redux\";\n\nconst rootReducer = combineReducers({\n  todoReducer,\n  authReducer,\n});\n\nexport default rootReducer;\n","import React from \"react\";\nimport TodoApp from \"./components/TodoApp\";\nimport SignupPage from \"./components/auth/SignupPage\";\nimport LoginPage from \"./components/auth/LoginPage\";\nimport ConfirmPage from \"./components/auth/ConfirmPage\";\nimport LogoutPage from \"./components/auth/LogoutPage\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Container } from \"react-bootstrap\";\nimport { AppNavbar } from \"./components/AppNavbar\";\nimport \"./App.css\";\nimport \"./bootstrap.min.css\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(rootReducer, composeEnhancer(applyMiddleware(thunk)));\n\n/**\n * App\n */\nfunction App() {\n  return (\n    <>\n      <Provider store={store}>\n        <Router>\n          <AppNavbar />\n          <Container>\n            <Switch>\n              <Route path=\"/\" component={TodoApp} exact />\n              <Route path=\"/auth/signup\" component={SignupPage} exact />\n              <Route path=\"/auth/login\" component={LoginPage} exact />\n              <Route path=\"/auth/confirm\" component={ConfirmPage} exact />\n              <Route path=\"/auth/logout\" component={LogoutPage} exact />\n            </Switch>\n          </Container>\n        </Router>\n      </Provider>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}